{"version":3,"sources":["componants/Navbar.js","componants/TextForm.js","componants/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","target","rows","newtext","toUpperCase","showAlert","newText","toLocaleLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","filter","element","length","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","componants_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3585eba5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand light\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          </ul>\r\n          \r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n\r\n<div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n      </div> \r\n    </div>\r\n  </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string}\r\n","\r\nimport React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleClearClick = ()=>{\r\n        // console.log(\"uppercase button clicked\" + text);\r\n        setText(\"\");\r\n    }\r\n\r\n    const handleCopyClick = ()=>{\r\n        let text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        text.setSelectionRange(0,9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied Your Text On Clipboard\" , \"sucess\");\r\n    }\r\n\r\n   const  handleSpaceClick = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\"\"));\r\n    props.showAlert(\"Remove Extra Space\" , \"sucess\");\r\n   }\r\n   \r\n\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"uppercase button clicked\" + text);\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted To Uppercase\" , \"sucess\");\r\n    }\r\n\r\n    const handleLowerClick = ()=>{\r\n        // console.log(\"you have clicked the lower case button\" + text);\r\n        let newText = text.toLocaleLowerCase();\r\n\r\n        setText(newText);\r\n        props.showAlert(\"Converted To Lowercase\" , \"sucess\");\r\n    }\r\n\r\n    const handleOnChange =(event) => {\r\n        // console.log(\"on Change\");\r\n        setText(event.target.value);\r\n        }\r\n\r\n    const [text , setText] = useState('Enter Text Here');\r\n    return (\r\n        <>\r\n        <div>\r\n            <h1 style={{color:props.mode === 'dark'?'white':'black' }}>{props.heading}</h1>\r\n            <div className=  \"mb-3\" style={{color:props.mode === 'dark'?'white':'black' }}> \r\n                {/* <label form=\"myBox\" className=\"form-lable\"></label> */}\r\n                <textarea className=\"form-control\" value= {text} style={{backgroundColor: props.mode === 'dark'?'#4a4b85':'white', color:props.mode === 'dark'?'white':'black' }} aria-label=\"With textarea\" onChange={handleOnChange} id=\"myBox\" rows=\"5\"></textarea>\r\n            </div>\r\n            <button type=\"button\" onClick={handleUpClick} id=\"myBtn\" className=\"btn btn-primary mx-2\">Convert to UpperCase</button>\r\n            <button type=\"button\" onClick={handleLowerClick} id=\"myBtn\" className=\"btn btn-primary mx-2\">Convert to LowerCase</button>\r\n            <button type=\"button\" onClick={handleClearClick} id=\"myBtn\" className=\"btn btn-primary mx-2\">Clear Text</button>\r\n            <button type=\"button\" onClick={handleCopyClick} id=\"myBtn\" className=\"btn btn-primary mx-2\">Copy Text</button>\r\n            <button type=\"button\" onClick={handleSpaceClick} id=\"myBtn\" className=\"btn btn-primary mx-2\">Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color:props.mode === 'dark'?'white':'black' }}>\r\n            <h1>Your Text Summary</h1>\r\n            <p> {text.split(\" \").filter((element)=>{return element.length!==0}).length} and {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").length} Minutes To Read Words</p>\r\n            <h1>Preview Of Your Text</h1>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && <div className={`alert alert-success alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './componants/Navbar';\nimport TextForm from './componants/TextForm';\nimport React, {useState} from 'react' ;\nimport Alert from './componants/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // wheather dark mode is yes or not\n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg : message,\n      type : type,\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    },1500);\n  }\n\n  const togglemode =()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#4a4b85';\n      showAlert(\"Dark Mode Has Been Enabled\" , \"success\");\n    }\n    else{\n      setMode('light') ;\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Has Been Enabled\" , \"success\");\n    }\n  }\n  return (\n    <>\n  <Navbar title = \"Text-Utils\" mode ={mode} togglemode={togglemode} />\n  <Alert alert={alert}/>\n  <div className=\"container\">\n  <TextForm showAlert={showAlert} heading = \"Enter Your text Here\"  mode ={mode}/>\n\n  </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}